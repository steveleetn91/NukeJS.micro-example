import NukeJSRoute from "nukejs-router/dist/libs/NukeJSRoute";
import _NukeJSCore from "nukejscore/dist/libs/NukeJSCore";
import FORMTODOLIST from "../components/Form.nuk";
import TABLETODOLIST from "../components/Table.nuk";

export default class ToDoList {
  constructor() {
    this.core = new _NukeJSCore();
    this.route = new NukeJSRoute();

    this.valueInput = this.core.hooks.useState("VALUE_INPUT_TASK", '');
    this.toDoList = this.core.hooks.useState("TO_DO_ITEMS", [{
      id: 1,
      name: 'haha',
      status: 'sadsad',
      isEdit: false,
    }]);

    this.valueEdit = this.core.hooks.useState("EDIT_ITEMS", {});
  }
  beforeRender() { }
  afterRender() {
    let newData = {}
    nukepage.toDoList.value.forEach((item) => {
      newData[item.id] =  item.name
    })
    nukepage.valueEdit.set(newData, false)
  }

  clickSave() {
    nukepage.toDoList.value.push({ id: nukepage.toDoList.value.length + 1, name: nukepage.valueInput.value, status: 'Progress', isEdit: false })
    nukepage.toDoList.set(nukepage.toDoList.value)
  }

  deleteTask(e) {
    const newToDoItems = nukepage.toDoList.value.filter(item => item.id !== Number(e.getAttribute('taskid')))
    nukepage.toDoList.set(newToDoItems)
  }

  finishTask(e) {
    const selectedTask = nukepage.toDoList.value.find(item => item.id === Number(e.getAttribute('taskid')))
    selectedTask.status = "Finish"
    nukepage.toDoList.set(nukepage.toDoList.value)
  }

  updateTask(e) {
    const selectedTask = nukepage.toDoList.value.find(item => item.id === Number(e.getAttribute('taskid')))
    selectedTask.isEdit = !selectedTask.isEdit
    nukepage.toDoList.set(nukepage.toDoList.value)
  }

  saveTask(e) {
    const selectedTask = nukepage.toDoList.value.find(item => item.id === Number(e.getAttribute('taskid')))
    selectedTask.isEdit = false
    selectedTask.name = nukepage.valueEdit.value[e.getAttribute('taskid')]
    nukepage.toDoList.set(nukepage.toDoList.value)
  }

  render() {
    const _ = () => {
      return (
        <NukApp>
          <div class="min-vh-100" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="card rounded-3">
                  <div class="card-body p-4">

                    <h1 class="text-center my-3 pb-3">To Do App</h1>

                    <FORMTODOLIST params="this.clickSave, this"></FORMTODOLIST>

                    <TABLETODOLIST params="this.toDoList, this.deleteTask, this.finishTask, this.updateTask, this.valueEdit, this.saveTask"></TABLETODOLIST>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </NukApp>
      )
    }
    this.core.doom.build("root", _());
  }
}